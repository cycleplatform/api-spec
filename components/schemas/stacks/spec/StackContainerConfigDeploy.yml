title: StackContainerConfigDeploy.yml
type: object
required:
  - instances
properties:
  instances:
    type: integer
  strategy:
    type: string
    enum:
      - resource-density
      - manual
      - high-availability
      - first-available
      - node
      - edge
  stateful:
    type: object
    required:
      - options
    properties:
      options:
        type:
          - "object"
          - "null"
        properties:
          use_base_hostname:
            type:
              - "boolean"
              - "null"
  constraints:
    type: object
    properties:
      node:
        type: object
        required:
          - tags
        properties:
          tags:
            type: object
            properties:
              any:
                type: array
                items:
                  type: string
              all:
                type: array
                items:
                  type: string
      secrets:
        type: array
        items:
          type: string
      containers:
        type: array
        items:
          type: string
  shutdown:
    type: object
    properties:
      graceful_timeout:
        description: How long the platform will wait for a container to stop gracefully.
        anyOf:
          - type: "null"
          - $ref: ../../Duration.yml
      signals:
        type: array
        items:
          type: string
  startup:
    type: object
    properties:
      delay:
        description: How long the platform will wait before sending the start signal to the given container.
        anyOf:
          - type: "null"
          - $ref: ../../Duration.yml
  update:
    type: object
    description: Configurations for container updates.
    properties:
      stagger:
        $ref: ../../Duration.yml
        description: When set, Cycle will pick a random time from `0 - this duration`, and stagger the instances so they all start at different times (up to the time specified here).
  restart:
    type: object
    required:
      - condition
      - delay
      - max_attempts
    properties:
      condition:
        type: string
        enum:
          - always
          - never
          - failure
      delay:
        $ref: ../../Duration.yml
        description: How long the platform will wait before trying to restart the container.
      max_attempts:
        type: integer
      notify:
        type: object
        properties:
          emails:
            type: array
            items:
              type: string
          web_hook:
            type: string
  health_check:
    type: object
    required:
      - command
      - retries
      - interval
      - timeout
      - restart
    properties:
      command:
        type: string
        description: The command to run as your health check
        examples:
          - /bin/sh healthcheck.sh
      retries:
        type: integer
        description: The number of times to retry the command before marking an instance unhealthy
      interval:
        $ref: ../../Duration.yml
        description: How long to wait between running health checks.
      timeout:
        $ref: ../../Duration.yml
        description: How long before a health check attempt times out.
      restart:
        type: boolean
        description: A boolean where true represents the desire for the container to restart if any instance is unhealthy.
      delay:
        $ref: ../../Duration.yml
        description: How long to wait after a container start event before starting health checks.
  telemetry:
    type: object
    required:
      - retention
      - interval
      - disable
    properties:
      retention:
        $ref: ../../Duration.yml
        description: How long telemetry data should be retained.
      interval:
        $ref: ../../Duration.yml
        description: The duration between samples.
      disable:
        type: boolean
