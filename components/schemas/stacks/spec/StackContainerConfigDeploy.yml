title: StackContainerConfigDeploy
x-ogen-name: StackSpecContainerConfigDeploy
type: object
description: Stack configuration options related to how the container behaves over its lifecycle (startup, shutdown, health checks, etc).
required:
  - instances
properties:
  instances:
    description: The number of desired instances to deploy.
    type: integer
  strategy:
    description: >
      The strategy Cycle will apply when deploying instances of this container.

      - ** resource-density **: Cycle will distribute instances across servers to maintain balanced resource usage.
      - ** high-availability **: Cycle will deploy instances over servers with an emphasis on geographic and physical separation
      - ** first-available **: Cycle will deploy one instance to every node that matches the specified criteria. (default)
      - ** node **: Cycle will deploy one instance to every node that matches the specified criteria.
      - ** edge **: Cycle will prioritize geographic distribution of instances.
      - ** function **: Every ingress request/connection receives its own instance. 
      - ** manual **: Cycle will not make any decisions on where instances are deployed. Instead, instances must be deployed manually using the portal or API.
    type:
      - string
      - "null"
    enum:
      - resource-density
      - manual
      - high-availability
      - first-available
      - node
      - edge
      - function
    default: first-available
  function:
    description: Configuration options for containers using the 'function' deployment strategy.
    type:
      - object
      - "null"
    properties:
      max_pool_size:
        description: The maximum number of instances that Cycle can pre-allocate (includes auto-scaled instances).
        type:
          - integer
          - "null"
      max_shard_concurrency:
        description: For each shard (scheduler), the maximum number of tasks it can run in parallel.
        type:
          - integer
          - "null"
      max_runtime:
        description: The maximum amount of time a function instance can run before timing out.
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
      max_queue_time:
        description: The maximum amount of time Cycle will wait for an instance to be available.
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
  stateful:
    description: Configuration options for stateful containers.
    type:
      - object
      - "null"
    required:
      - options
    properties:
      options:
        description: Stateful container options.
        type:
          - object
          - "null"
        properties:
          use_base_hostname:
            description: When enabled, instances will utilize stateless base hostnames instead of being prefixed with a unique ID.
            type:
              - boolean
              - "null"
  constraints:
    description: Configuration options that provide the ability to set restrictions on which nodes instances of this container are able to be deployed to. (i.e. if you have a GPU container, it should only go on nodes with a GPU).
    type:
      - object
      - "null"
    properties:
      node:
        type:
          - object
          - "null"
        required:
          - tags
        properties:
          tags:
            description: Tags applied to a node. Cycle generates some automatically, but additional, custom tags can be applied on a per-node basis.
            type: object
            properties:
              any:
                description: If a node has at least one of these tags, it is considered a valid deployment target for this container.
                type: array
                items:
                  type: string
              all:
                description: A node must have **ALL** of these tags to be considered a valid deployment target for this container.
                type: array
                items:
                  type: string
      # Not yet implemented.
      # secrets:
      #   type:
      #     - array
      #     - "null"
      #   items:
      #     type: string
      # containers:
      #   type:
      #     - array
      #     - "null"
      #   items:
      #     type: string
  shutdown:
    description: Configuration options for how this container behaves during shutdown.
    type:
      - object
      - "null"
    properties:
      graceful_timeout:
        description: How long the platform will wait for a container to stop gracefully.
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
      signals:
        type: array
        description: Signals that should be sent to the container on shutdown.
        items:
          type: string
          enum:
            - SIGTERM
            - SIGINT
            - SIGUSR1
            - SIGUSR2
            - SIGHUB
            - SIGKILL
            - SIGQUIT
  startup:
    description: Configuration options for how this container behaves during startup.
    type:
      - object
      - "null"
    properties:
      delay:
        description: How long the platform will wait before sending the start signal to the given container.
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
  update:
    type:
      - object
      - "null"
    description: Configurations for how the container behaves during updates.
    properties:
      stagger:
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
        description: When set, Cycle will pick a random time from `0 - this duration`, and stagger the instances so they all start at different times (up to the time specified here).
  restart:
    description: Configuration options for how Cycle should handle restarting this container (i.e. in case the process inside the container dies).
    type:
      - object
      - "null"
    required:
      - condition
      - delay
      - max_attempts
    properties:
      condition:
        description: Under what circumstances Cycle should try to restart this container.
        type: string
        enum:
          - always
          - never
          - failure
      delay:
        $ref: ../../Duration.yml
        description: How long the platform will wait between restart attempts.
      max_attempts:
        type: integer
        description: The maximum number of restart attempts Cycle will make.
  health_check:
    description: Configuration options for automated container health checks.
    type:
      - object
      - "null"
    required:
      - command
      - retries
      - interval
      - timeout
      - restart
    properties:
      command:
        type: string
        description: >
          The command or script to run to verify the health of the container. This script is run inside the container by Cycle.

          This command accepts two types of entries:

          - The first is a reference to a script that already lives in the container filesystem. This can be defined by giving the full path to the script as the value.  
          - The second format is an inline script.  If you need the code to execute within a shell, wrap the commands in escaped quotes like this `"\"curl -s -o /dev/console -w \"%{http_code}\" http://localhost:3000/_health | grep '200'  && exit 0 || exit 1\""`.  Do not use the `/bin/sh -c <commands>` format, this will not be accepted.
        example: /bin/sh healthcheck.sh
      retries:
        type: integer
        description: The number of times to retry the command before marking an instance unhealthy.
      interval:
        $ref: ../../Duration.yml
        description: How long to wait between running health checks.
      timeout:
        $ref: ../../Duration.yml
        description: How long before a health check attempt times out.
      restart:
        type: boolean
        description: A boolean where true represents the desire for the container to restart if any instance is unhealthy.
      delay:
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
        description: How long to wait after a container start event before running health checks.
  telemetry:
    description: Configuration options for how the instance telemetry (CPU usage, etc) is handled.
    type:
      - object
      - "null"
    required:
      - disable
    properties:
      retention:
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
        description: How long telemetry data should be retained.
      interval:
        anyOf:
          - $ref: ../../Duration.yml
          - type: "null"
        description: The duration between samples.
      webhook:
        type:
          - string
          - "null"
        description: A URL where Cycle will send telemetry data to. The payload will be an instance resource snapshot.
      disable:
        type: boolean
        description: If true, Cycle will not aggregate telemetry for this container's instances.
