title: StackSpecV1LbRouterConfig
description: A specific router configuration that describes how traffic matching the rule is handled.
type: object
required:
  - match
  - mode
  - config
properties:
  match:
    oneOf:
      - type: object
        description: The ruleset for this router to be selected. If both `domains`` and `internal_port` are null, then this match acts as a wildcard and will match all.
        required:
          - domains
          - internal_ports
        properties:
          domains:
            description: The specific domains to match against.
            oneOf:
              - type:
                  - array
                  - "null"
                items:
                  type: string
              - $ref: ../../../../StackVariable.yml
          internal_ports:
            description: The specific ports to match against.
            oneOf:
              - type:
                  - array
                  - "null"
                items:
                  type: integer
              - $ref: ../../../../StackVariable.yml
          path:
            oneOf:
              - type:
                  - string
                  - "null"
              - $ref: ../../../../StackVariable.yml
          containers:
            description: Match traffic destined (or not destined) for a particular container.
            oneOf:
              - type:
                  - object
                  - "null"
                properties:
                  include:
                    description: Match any traffic that would be routed to one of these containers.
                    oneOf:
                      - type:
                          - array
                          - "null"
                        items:
                          $ref: ../../../../../../components/schemas/HybridIdentifier.yml
                      - $ref: ../../../../StackVariable.yml
                  exclude:
                    description: Match any traffic that would NOT be routed to one of these containers.
                    oneOf:
                      - type:
                          - array
                          - "null"
                        items:
                          $ref: ../../../../../../components/schemas/HybridIdentifier.yml
                      - $ref: ../../../../StackVariable.yml
              - $ref: ../../../../StackVariable.yml
      - $ref: ../../../../StackVariable.yml
  mode:
    description: |
      How to route the traffic to the destination.
      `random`: Pick a valid destination at random.
      `round-robin`: Send each request to the 'next' destination on the list, restarting from the beginning when the last destination is used.
    oneOf:
      - type: string
        enum:
          - random
          - round-robin
      - $ref: ../../../../StackVariable.yml
  config:
    oneOf:
      - type: object
        required:
          - sticky_sessions
          - destination_retries
          - timeouts
        properties:
          sticky_sessions:
            description: If a request comes in from the same origin, ensure it hits the same destination.
            oneOf:
              - type: boolean
              - $ref: ../../../../StackVariable.yml
          destination_retries:
            description: If a destination is unavailable, retry up to [x] times, instead of immediately failing with a 503/504 error.
            oneOf:
              - type: integer
              - $ref: ../../../../StackVariable.yml
          destination_prioritization:
            default: null
            oneOf:
              - type: string
                description: >
                  Hints to the load balancer how to prioritize traffic to instances.

                  **random**: Chooses a random instance.
                  **latency**: Prioritizes lower latency instances.
                enum:
                  - latency
                  - random
              - $ref: ../../../../StackVariable.yml
              - type: "null"
          tls:
            description: TLS termination configuration. If null, the platform will use the default configuration. Port 443 by default has TLS termination enabled.
            oneOf:
              - type:
                  - object
                  - "null"
                properties:
                  server_name:
                    description: |
                      [Advanced] Change the domain the controller listens on.
                    oneOf:
                      - type:
                          - string
                          - "null"
                      - $ref: ../../../../StackVariable.yml
                  allow_insecure:
                    description: If enabled, accept TLS traffic with an invalid certificate. This is usually done for development/testing, and is not recommended for production use.
                    oneOf:
                      - type:
                          - boolean
                          - "null"
                      - $ref: ../../../../StackVariable.yml
                  client_cert_auth:
                    description: A PEM encoded string of certificates.
                    oneOf:
                      - type:
                          - string
                          - "null"
                      - $ref: ../../../../StackVariable.yml
                  client_auth:
                    description: |
                      Defines how to validate the connecting TLS certificate.
                      `none`: Do not require a TLS certificate to be sent
                      `request`: Asks the client to send a TLS certificate, but does not require nor validate it.
                      `require`: Requires a certificate be sent for the request to be valid, but does not validate the certificate.
                      `require-verify`: Requires both that the client send a certificate, and that the certificate is valid. This is required when using https.
                    oneOf:
                      - type: string
                        enum:
                          - none
                          - request
                          - require
                          - require-verify
                      - $ref: ../../../../StackVariable.yml
                      - type: "null"
              - $ref: ../../../../StackVariable.yml
          timeouts:
            description: Defines how the length of various sorts of timeouts when communicating with the destination.
            oneOf:
              - type: object
                required:
                  - destination_connection
                properties:
                  destination_connection:
                    description: The duration the load balancer will wait before timing out while attempting to connect to the destination.
                    oneOf:
                      - $ref: ../../../../../../components/schemas/Duration.yml
                      - $ref: ../../../../StackVariable.yml
              - $ref: ../../../../StackVariable.yml
          extension:
            anyOf:
              - type: "null"
              - type: object
                description: Additional configuration options specific to the selected mode (tcp/http).
                discriminator:
                  propertyName: type
                  mapping:
                    tcp: routers/StackSpecTcpRouterConfig.yml
                    udp: routers/StackSpecUdpRouterConfig.yml
                    http: routers/StackSpecHttpRouterConfig.yml
                oneOf:
                  - $ref: routers/StackSpecTcpRouterConfig.yml
                  - $ref: routers/StackSpecHttpRouterConfig.yml
                  - $ref: routers/StackSpecUdpRouterConfig.yml
      - $ref: ../../../../StackVariable.yml
