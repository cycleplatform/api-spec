get:
  operationId: "getDNSZoneRecords"
  summary: List DNS Zone Records
  description: Requires the `dns-view` capability.
  tags:
    - Records
  parameters:
    - name: zoneId
      description: The ID of the zone.
      in: path
      required: true
      schema:
        type: string
    - $ref: includes/RecordIncludeParam.yml
    - name: filter
      in:
        query
        # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the DNS record's current state.
    - $ref: ../../../../components/parameters/SortParam.yml
    - $ref: ../../../../components/parameters/PageParam.yml
  responses:
    200:
      description: Returns a collection of DNS Zone Records.
      content:
        application/json:
          schema:
            title: "DNSZoneRecordListReturn"
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../components/schemas/dns/records/Record.yml
              includes:
                $ref: includes/RecordIncludes.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml

post:
  operationId: "createDNSZoneRecord"
  summary: Create DNS Zone Record
  description: Requires the `dns-manage` capability.
  tags:
    - Records
  parameters:
    - name: zoneId
      description: The ID of the Zone.
      in: path
      required: true
      schema:
        type: string
    - $ref: includes/RecordIncludeParam.yml
  requestBody:
    description: Parameters for creating a new DNS Zone Record.
    content:
      application/json:
        schema:
          type: object
          required:
            - type
            - name
          properties:
            type:
              $ref: ../../../../components/schemas/dns/records/RecordTypes.yml
            name:
              type: string
              description: A name for the given record where `@` represents the desire to use the root of the origin.
  responses:
    201:
      description: Returns the DNS zone resource.
      content:
        application/json:
          schema:
            title: "DNSZoneCreateResponse"
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../../components/schemas/dns/records/Record.yml
              includes:
                $ref: includes/RecordIncludes.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
