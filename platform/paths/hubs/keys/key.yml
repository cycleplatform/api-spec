get:
  operationId: "getAPIKey"
  summary: Get API Key
  description: Requries the `api-keys-manage` capability.
  tags:
    - API Keys
  parameters:
    - name: apikeyId
      description: The ID of the API Key.
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - roles
  responses:
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
    200:
      description: Returns an API Key resource.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/hubs/ApiKey.yml
              includes:
                $ref: ../../../../components/schemas/hubs/HubMembershipIncludes.yml

patch:
  operationId: "updateAPIKey"
  summary: Update API Key
  description: Requires the `api-keys-manage` capability.
  tags:
    - API Keys
  parameters:
    - name: apikeyId
      description: The ID of the API Key.
      in: path
      required: true
      schema:
        type: string
  requestBody:
    description: Parameters for updating an API Key.
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              description: A name given to the API Key.
            role_id:
              $ref: ../../../../components/schemas/ID.yml
              description: The ID of the role this API Key is a member of.
            ips:
              type:
                - array
                - "null"
              description: An array of approved IPs from which this API Key can be used.
              items:
                type: string
  responses:
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
    200:
      description: Returns an API Key.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../../components/schemas/hubs/ApiKey.yml

delete:
  operationId: "deleteAPIKey"
  summary: Delete API Key
  description: Requires the 'api-keys-manage' capability.
  tags:
    - API Keys
  parameters:
    - name: apikeyId
      description: The ID of the API Key.
      in: path
      required: true
      schema:
        type: string
  responses:
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
    200:
      description: Returns an API Key.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../../components/schemas/hubs/ApiKey.yml
