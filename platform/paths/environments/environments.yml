get:
  operationId: "getEnvironments"
  summary: List Environments
  description: Requires the `environments-view` capability.
  tags:
    - Environments
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - containers
            - containers_count
            - instances_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - stacks
    - name: filter
      in: query
      # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          creator:
            type: string
            description: |
              `filter[creator]=account-ID` filter for environments matching a particular creator, such as `account-ID`.
          identifier:
            type: string
            description: |
              `filter[identifier]=value` List only those environments matching this identifier. May return multiple results.
          search:
            type: string
            description: |
              `filter[search]=value` search for a value associated with a field on the given environment(s).
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the environment's current state.
          stack_build:
            type: string
            description: |
              `filter[stack_build]=ID` stack build filtering by ID.  Submit the ID of the stack build you wish to filter for and the return sill be any environments that have the stack build deployed to them.
    - $ref: ../../../components/parameters/SortParam.yml
    - $ref: ../../../components/parameters/PageParam.yml
  responses:
    200:
      description: Returns a list of Environments.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../components/schemas/environments/Environment.yml
              includes:
                type: object
                properties:
                  creators:
                    $ref: ../../../components/schemas/includes/CreatorInclude.yml
    default:
      $ref: ../../../components/responses/errors/DefaultError.yml

post:
  operationId: "createEnvironment"
  summary: Create Environment
  description: Requires the `environments-create` capability.
  tags:
    - Environments
  parameters: []
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - cluster
            - about
            - features
            - stack
          properties:
            name:
              type: string
              description: A user defined name for the Environment.
            identifier:
              $ref: ../../../components/schemas/Identifier.yml
            cluster:
              type: string
              description: The cluster this Environment is associated with.
            about:
              type: object
              description: Contains details regarding the Environment.
              required:
                - description
              properties:
                description:
                  type: string
                  description: A custom description for this Environment.
            features:
              $ref: ../../../components/schemas/environments/Features.yml
  responses:
    201:
      description: Returns an Environment.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../components/schemas/environments/Environment.yml
    default:
      $ref: ../../../components/responses/errors/DefaultError.yml
