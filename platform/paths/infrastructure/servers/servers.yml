get:
  operationId: "getServers"
  summary: List Servers
  description: Requires the `servers-view` capability.
  tags:
    - Servers
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - node
            - instances_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - locations
            - models
            - integrations
    - name: filter
      in: query
      # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the provider's current state.
          tags:
            type: string
            description: |
              `filter[tags]=tagone,tagtwo,tagthree` filtering by Server tag.  Enter one or more tags (comma separated) and the return will include servers that match any tags in the list.
          cluster:
            type: string
            description: |
              `filter[cluster]=clusterIdentifier` filtering by cluster.  Enter the cluster identifier and the return will include servers belonging to the specified cluster.
          providers:
            type: string
            description: |
              `filter[providers]=providerone,providertwo` filtering by provider.  Enter one or more providers (commas separated) and the return will include servers that match any providers in the list.
    - $ref: "../../../../components/parameters/SortParam.yml"
    - $ref: "../../../../components/parameters/PageParam.yml"
  responses:
    200:
      description: Returns a list of Servers.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../components/schemas/infrastructure/servers/Server.yml
              includes:
                $ref: ../../../../components/schemas/infrastructure/servers/ServerIncludes.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml

post:
  operationId: "createServer"
  summary: Create Server
  description: Requires the `servers-provision` capability.
  tags:
    - Servers
  parameters: []
  requestBody:
    description: Parameters for creating a Server.
    content:
      application/json:
        schema:
          type: object
          required:
            - servers
            - cluster
          properties:
            cluster:
              type: string
              description: The existing or new cluster this infrastructure should be provisioned in.
            servers:
              description: An array of servers to provision.
              type: array
              items:
                type: object
                required:
                  - integration_id
                  - model_id
                  - location_id
                  - quantity
                properties:
                  integration_id:
                    $ref: ../../../../components/schemas/ID.yml
                    description: The ID of the provider integration to use for this Server.
                  model_id:
                    type: string
                    description: The model ID of the Server.
                  location_id:
                    type: string
                    description: The location ID of the Server.
                  quantity:
                    type: integer
                    description: The number of this Server at this location to deploy.
                  hostnames:
                    description: An array of hostnames for the given servers.
                    type: array
                    items:
                      type: string
                  advanced:
                    type: array
                    items:
                      type: object
                      properties:
                        provision_options:
                          type:
                            - object
                            - "null"
                          description: Advanced options to apply to the provisioning of a server.
                          properties:
                            attached_storage_size:
                              type:
                                - integer
                                - "null"
                              description: For providers that support setting this value dynamically; A number representing the GB size of the volume to be attached to the server.
                            reservation_id:
                              type:
                                - string
                                - "null"
                              description: A reservation ID to be used to provision a server that has been reserved at the provider.
                            encrypt_storage:
                              type:
                                - boolean
                                - "null"
                              description: For providers that support this setting, this option will encrypt storage for server.
                        zone:
                          type:
                            - string
                            - "null"
  responses:
    202:
      description: Returns a Job Descriptor.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../../components/schemas/jobs/JobDescriptor.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
