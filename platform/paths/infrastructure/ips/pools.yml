post:
  operationId: createIpPool
  summary: Create IP Pool
  description: |
    Create an infrastructure IP Pool

    Requires the 'ips-manage' capability.
  tags:
    - IPs
  parameters: []
  requestBody:
    description: Parameters for creating a new IP pool.
    content:
      application/json:
        schema:
          type: object
          required:
            - server_id
            - block
          properties:
            server_id:
              $ref: ../../../../components/schemas/ID.yml

            block:
              type: object
              required:
                - cidr
                - gateway
              properties:
                network:
                  oneOf:
                    - $ref: ../../../../components/schemas/Cidr.yml
                    - type: "null"
                cidr:
                  $ref: ../../../../components/schemas/Cidr.yml
                gateway:
                  oneOf:
                    - $ref: ../../../../components/schemas/IpAddress.yml
                    - type: "null"

  responses:
    201:
      description: Returns an IP Pool.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../../components/schemas/infrastructure/ips/IpPool.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml

get:
  operationId: "getIpPools"
  summary: List IP Pools
  description: Requires the `ips-manage` capability.
  tags:
    - IPs
  parameters:
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - servers
            - integrations
            - locations
    - name: filter
      in: query
      # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          available:
            type: string
            description: |
              `filter[available]=true` filter for IPs that are available for use.
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the IP's current state.
          server:
            type: string
            description: |
              `filter[server]=ID` server filtering by ID. Submit the ID of the server you wish to filter for and the return will be any IP pool associated with that server.
          location:
            type: string
            description: |
              `filter[location]=ID` location filtering by ID. Submit the ID of the location you wish to filter by.
    - $ref: ../../../../components/parameters/SortParam.yml
    - $ref: ../../../../components/parameters/PageParam.yml
  responses:
    200:
      description: A list of IP Pools.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../components/schemas/infrastructure/ips/IpPool.yml
              includes:
                $ref: ../../../../components/schemas/infrastructure/ips/IpPoolIncludes.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
