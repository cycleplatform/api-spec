get:
  operationId: "getSanLuns"
  summary: Get SAN LUNs
  description: Lists any SAN LUNs available for the hub.
  security:
    - bearerAuth: []
  tags:
    - SANs
  parameters:
    - $ref: "../../../../../components/parameters/SortParam.yml"
    - $ref: "../../../../../components/parameters/PageParam.yml"
    - name: filter
      in: query
      required:
        false
        # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          server:
            description: Get only those SAN LUNs within the specified server.
            type: string
          location:
            description: Get only those SAN LUNs within the specified location.
            type: string
          cluster:
            description: Get only those SAN LUNs within the specified cluster.
            type: string
          state:
            description: Get only those SAN LUNs with the specified state.
            type: string
            enum:
              - new
              - live
              - deleting
              - deleted
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - container
    - name: include
      in: query
      required: false
      description: |
        A comma-separated list of include values. Included resources will show up under the root document's `include` field.
        In the case of applying an include to a collection of resources, if multiple resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - targets
  responses:
    200:
      description: Returns a list of SAN LUNs.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../../components/schemas/infrastructure/san/luns/SanLun.yml
              includes:
                $ref: ../includes/SanLunIncludes.yml
    default:
      $ref: ../../../../../components/responses/errors/DefaultError.yml
