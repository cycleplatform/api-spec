# deploy as a file is a reserved word is seems so had to use underscore
title: ContainerDeploy
type: object
description: Deployment configuration for the given container.
required:
  - instances
properties:
  instances:
    type: integer
    description: The number of initial desired instances for a given container.
  strategy:
    type: string
    description: The deployment strategy to use when scaling the given container.
    enum:
      - resource-density
      - first-available
      - manual
      - high-availability
    # leaving out stateful on purpose pretty sure we dont use it anymore.
  constraints:
    type: object
    description: Settings that give more granular control over deployment targets and conditions.
    properties:
      node:
        type: object
        description: Constraint settings related to which nodes an instance can be deployed to.
        required:
          - tags
        properties:
          tags:
            type: object
            description: Lists of server tags that formally declair servers that match the criteria for deployment.
            properties:
              any:
                type: array
                items:
                  type: string
                description: A list of tags where a server matching any tags from the list is qualified as a deployment target.
              all:
                type: array
                items:
                  type: string
                description: A list of tags where a server matching all tags from the list is the only scenario where the server is qualified as a deployment target.
      containers:
        type: array
        items: 
          type: string
        description: An array of container identifiers the platform will send the start signal to before sending the start signal to this container.
  shutdown:
    type: object
    description: Configuration for what to do during container shutdown.
    required:
      - graceful_timeout
      - signals
    properties:
      graceful_timeout:
        type: integer
        description: The time in seconds the platform will wait for a container to stop gracefully.
      signals:
        type: array
        items:
          type: string
        description: Process signal sent to the container process.
        enum:
          - SIGTERM
          - SIGINT
          - SIGUSR1
          - SIGUSR2
          - SIGHUP
          - SIGQUIT
  startup:
    type: object
    description: Configurations for container startup.
    properties:
      delay:
        type: integer
        description: A value in seconds representing how long the platform will wait before sending the start signal to the given container.
  restart:
    type: object
    description: Configurations for container restart events.
    required:
      - condition
      - delay
      - max_attempts
    properties:
      condition:
        type: string
        description: Policy for what should happen in the event of a container dying.
        enum:
          - always
          - never
          - failure
      delay:
        type: integer
        description: Time in seconds the platform will wait before trying to restart the container.
      max_attempts:
        type: integer
        description: The amount of times the platform will attempt the restart policies.
  health_check:
    type: object
    description: Configuration for determining the health of a container.
    required:
      - command
      - retries
      - interval
      - timeout
      - restart
    properties:
      command:
        type: string
        description: The command that will be run to verify the health of the container.
      retries:
        type: integer
        description: The number of times the platform will retry the command before marking the container unhealthy.
      interval:
        type: integer
        description: The number of seconds between retries.
      timeout:
        type: integer
        description: The number of time in seconds before a health check attempt times out.
      restart:
        type: boolean
        description: A boolean where `true` represents the desire for a container to restart if unhealthy.
  telemetry:
    type: object
    description: Configuration settings for container telemetery reporting.
    required:
      - retention
      - interval
      - disable
    properties:
      retention:
        type: integer
        description: The number in seconds for telemetry data to be retained.
      interval:
        type: integer
        description: The number in seconds between samples.
      disable:
        type: boolean
        description: A boolean where true disables all telemetry reporting for this container.
      webhook:
        type: string
        description: An endpoint to report the telemetry data to.
