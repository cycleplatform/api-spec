---
get:
  operationId: "getEnvironments"
  tags:
    - Environments
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - containers
            - containers_count
            - instances_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - stacks
    - $ref: "../../../components/parameters/SortParam.yml"
    - $ref: "../../../components/parameters/FilterParam.yml"
    - $ref: "../../../components/parameters/PageParam.yml"
  summary: List Environments
  description: Requires the `environments-view` capability.
  responses:
    "200":
      description: Returns a collection of environment resources.
      content:
        application/json:
          schema:
            title: "EnvironmentListResponse"
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  "$ref": "../../../components/schemas/environments/Environment.yml"
              includes:
                type: object
                properties:
                  creators:
                    $ref: "../../../components/schemas/includes/CreatorInclude.yml"
    400:
      $ref: ../../../components/responses/errors/400.yml
    401:
      $ref: ../../../components/responses/errors/401.yml
    403:
      $ref: ../../../components/responses/errors/403.yml
    404:
      $ref: ../../../components/responses/errors/404.yml
    409:
      $ref: ../../../components/responses/errors/409.yml
    415:
      $ref: ../../../components/responses/errors/415.yml
    422:
      $ref: ../../../components/responses/errors/422.yml
    500:
      $ref: ../../../components/responses/errors/500.yml
    503:
      $ref: ../../../components/responses/errors/503.yml
post:
  operationId: "createEnvironment"
  tags:
    - Environments
  parameters: []
  summary: Create Environment
  description: Requires the `environments-create` capability.
  requestBody:
    content:
      application/json:
        schema:
          "$ref": "../../../components/schemas/environments/requestBodies/CreateEnvironmentBody.yml"
  responses:
    201:
      description: Returns an environment resource.
      content:
        application/json:
          schema:
            title: "EnvironmentResponse"
            type: object
            properties:
              data:
                "$ref": "../../../components/schemas/environments/Environment.yml"
    400:
      $ref: ../../../components/responses/errors/400.yml
    401:
      $ref: ../../../components/responses/errors/401.yml
    403:
      $ref: ../../../components/responses/errors/403.yml
    404:
      $ref: ../../../components/responses/errors/404.yml
    409:
      $ref: ../../../components/responses/errors/409.yml
    415:
      $ref: ../../../components/responses/errors/415.yml
    422:
      $ref: ../../../components/responses/errors/422.yml
    500:
      $ref: ../../../components/responses/errors/500.yml
    503:
      $ref: ../../../components/responses/errors/503.yml