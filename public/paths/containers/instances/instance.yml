get:
  operationId: "getContainerInstance"
  tags:
    - Instances
  parameters:
    - name: containerId
      description: The ID of the requested container.
      in: path
      required: true
      schema:
        type: string
    - name: instanceId
      description: The ID for the container instance.
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - servers
            - locations
            - providers
            - containers
            - environments
  summary: Fetch Instance
  description: Requires the `containers-view` capability.
  responses:
    "200":
      description: Returns a container instance resource.
      content:
        application/json:
          schema:
            title: ContainerInstanceResponse
            type: object
            properties:
              data:
                "$ref": "../../../../components/schemas/containers/instances/Instance.yml"
              includes:
                "$ref": "../../../../components/schemas/containers/instances/InstanceIncludes.yml"
    "400":
      description: This usually means the data sent was in an invalid format.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "401":
      description: OAuth token is invalid.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "404":
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "500":
      description: Indicates an issue with Cycle. Rare.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
delete:
  operationId: "removeContainerInstance"
  tags:
    - Instances
  parameters:
    - name: containerId
      description: The ID of the requested container.
      in: path
      required: true
      schema:
        type: string
    - name: instanceId
      description: The ID for the container instance.
      in: path
      required: true
      schema:
        type: string
  summary: Delete Instance
  description: Requires the `containers-update` capability.
  responses:
    "200":
      description: Returns a task descriptor
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "../../../../components/schemas/jobs/TaskDescriptor.yml"
    "400":
      description: This usually means the data sent was in an invalid format.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "401":
      description: OAuth token is invalid.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "404":
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
    "500":
      description: Indicates an issue with Cycle. Rare.
      content:
        application/json:
          schema:
            "$ref": "../../../../components/schemas/error/ErrorResponse.yml"
