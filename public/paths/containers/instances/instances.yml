get:
  operationId: "getInstances"
  tags:
    - Instances
  parameters:
    - name: containerId
      description: The ID of the container this instance is created from.
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - servers
            - locations
            - providers
            - containers
            - environments
    - name: filter
      in: query
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.

        ## Possible Values
        ### State
        `filter[state]=value1,value2` state filtering will allow you to filter by the instance's current state.

        ### Search 
        `filter[search]=value` search instances for a value associated with a field on the given instance(s).

        ### Server
        `filter[server]=ID` server filtering by ID.  Submit the ID of the server you wish to filter for and the return will be any instances of the container currently deployed to the given server.

      schema:
        type: object
        additionalProperties:
          type: string
          oneOf:
            - type: string
            - type: array
              items:
                type: string

    - $ref: ../../../../components/parameters/SortParam.yml

    - $ref: ../../../../components/parameters/PageParam.yml
  summary: List Instances
  description: Requires the `containers-view` capability.
  responses:
    200:
      description: Returns a collection of contianer instance resources.
      content:
        application/json:
          schema:
            title: ContainerInstanceListResponse
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../components/schemas/containers/instances/Instance.yml
              includes:
                $ref: ../../../../components/schemas/containers/instances/InstanceIncludes.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
post:
  operationId: "createContainerInstance"
  tags:
    - Containers
  parameters:
    - name: containerId
      description: The ID of the container this instance is created from.
      in: path
      required: true
      schema:
        type: string
  summary: Create Instance(s)
  description: Requires the `containers-update` capability.
  requestBody:
    description: Parameters for creating a container instance.
    content:
      application/json:
        schema:
          type: array
          items:
            type: object
            required:
              - server_id
              - new_instances
            properties:
              server_id:
                type: string
                description: The ID of the server the new instance(s) should be deployed to.
              new_instances:
                type: integer
                description: The number of new instances to be created on the given server.

  responses:
    200:
      description: Returns a task descriptor.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/jobs/TaskDescriptor.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
delete:
  operationId: "removeMultipleContainerInstances"
  tags:
    - Instances
  parameters:
    - name: containerId
      description: The ID of the container the instance(s) were created from.
      in: path
      required: true
      schema:
        type: string
  summary: Delete Instance(s)
  description: Requires the `containers-update` capability.
  responses:
    200:
      description: Returns a task descriptor.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/jobs/TaskDescriptor.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
