get:
  operationId: "getStackBuilds"
  tags:
    - Stacks
  parameters:
    - name: stackId
      in: path
      required: true
      description: The ID of the stack
      schema:
        type: string
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - containers_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - stack_id
            - hub_id
            - about
            - instructions
            - events
            - state

    - name: filter
      in: query
      required: false
      description: |
        ## Filter Field
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.

        ## Possible Values
        ### Search
        `filter[search]=value` search stack builds for a value associated with a field on the given stack build(s).

        ### State
        `filter[state]=value1,value2` state filtering will allow you to filter by the stack build's current state.

      schema:
        type: object
        additionalProperties:
          type: string
          oneOf:
            - type: string
            - type: array
              items:
                type: string
    - $ref: ../../../../components/parameters/SortParam.yml

    - $ref: ../../../../components/parameters/PageParam.yml
  summary: List Builds
  description: Requires the `stacks-view` capability.
  responses:
    200:
      description: Returns a collection of stack builds.
      content:
        application/json:
          schema:
            title: "StackBuildsCollectionResponse"
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../../../components/schemas/stacks/builds/StackBuild.yml
              includes:
                $ref: ../../../../components/schemas/stacks/builds/StackBuildInclude.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
post:
  operationId: "createStackBuild"
  tags:
    - Stacks
  parameters:
    - name: stackId
      in: path
      required: true
      description: The ID of the stack
      schema:
        type: string
  summary: Create Stack Build
  description: Requires the `stacks-manage` capability.
  requestBody:
    description: Parameters for creating a new stack build.
    content:
      application/json:
        schema:
          type: object
          properties:
            about:
              $ref: ../../../../components/schemas/stacks/builds/StackBuildAbout.yml
            instructions:
              $ref: ../../../../components/schemas/stacks/builds/StackBuildInstructions.yml
  responses:
    201:
      description: Returns a stack build resource.
      content:
        application/json:
          schema:
            title: "StackBuildCreateResponse"
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/stacks/builds/StackBuild.yml
    default:
      $ref: ../../../../components/responses/errors/DefaultError.yml
