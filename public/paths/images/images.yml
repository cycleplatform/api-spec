get:
  operationId: "getImages"
  tags:
    - Images
  summary: List Images
  description: Requires the `images-view` capability.
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - containers_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - stack_builds
            - stacks
            - sources
            - integrations
    - name: filter
      in: query
      # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      # TODO - source type isnt implemented correctly see notes
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          identifier:
            type: string
            description: |
              `filter[identifier]=value` List only those images matching this identifier. May return multiple results.
          search:
            type: string
            description: |
              `filter[search]=value` search for a value associated with a field on the given image(s).
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the image's current state.
          source_type:
            type: string
            description: |
              `filter[source_type]=value` filter images by the image source's type.  Can be: `direct` or `stack_build`
          source_id:
            type: string
            description: |
              `filter[source_id]=ID` image filtering by source ID.  Submit the ID of the image source you wish to filter for and the return will be any images created from that source.
    - $ref: ../../../components/parameters/SortParam.yml
    - $ref: ../../../components/parameters/PageParam.yml
  responses:
    200:
      description: Returns a collection of image resources.
      content:
        application/json:
          schema:
            title: "ImagesListResponse"
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../components/schemas/images/Image.yml
              includes:
                $ref: ../../../components/schemas/images/ImageIncludes.yml
    default:
      $ref: ../../../components/responses/errors/DefaultError.yml
post:
  operationId: "createImage"
  tags:
    - Images
  parameters: []
  summary: Create Image
  description: Requires the `images-import` capability.
  requestBody:
    description: Parameters for creating a new image.
    content:
      application/json:
        schema:
          type: object
          required:
            - source_id
          properties:
            name:
              type: string
              description: A name for the image.
            source_id:
              type: string
              description: The ID for the image source to be used.
            build:
              type: object
              description: A build object, holding information important to the image build.
              properties:
                args:
                  type: object
                  description: An object holding key value build time arguments needed for the image during build time.
                  additionalProperties:
                    type: string
            override:
              type: object
              description: An override object to be used for a single image create request.
              properties:
                target:
                  type: string
                  description: For image sources with `docker-hub` or `docker-registry` origin types. A target to be used for overridding the default target - should include an image and a tag.
                targz_url:
                  type: string
                  description: For image sources with `docker-file` origin types. A URL pointing to a .tar.gz file of a repo with a Dockerfile in it - can be used instead of linking Cycle directly to a repository.
  responses:
    201:
      description: Returns an image resource.
      content:
        application/json:
          schema:
            title: "ImagesCreateResponse"
            type: object
            required:
              - data
            properties:
              data:
                $ref: ../../../components/schemas/images/Image.yml
    default:
      $ref: ../../../components/responses/errors/DefaultError.yml
