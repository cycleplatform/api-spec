get:
  operationId: "getImages"
  tags:
    - Images
  summary: List Images
  description: Requires the `images-view` capability.
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - containers_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - creators
            - stack_builds
            - stacks
            - sources
    - name: filter
      in: query
      required: false
      description: |
        ## Filter Field 
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.

        ## Possible Values
        ### Search 
        `filter[search]=value` search for a value associated with a field on the given image(s).

        ### State
        `filter[state]=value` state filtering will allow you to filter by the images's current state.

        ### Source Type
        `filter[source_type]=value` filter images by the image source's type.  Can be: `direct` or `stack_build`

        ### Source
        `filter[source_id]=ID` image filtering by source ID.  Submit the ID of the image source you wish to filter for and the return will be any images created from that source.

      schema:
        type: object
        additionalProperties:
          type: string
          oneOf:
            - type: string
            - type: array
              items:
                type: string
            - type: object
              additionalProperties:
                type: string
    - $ref: ../../../components/parameters/SortParam.yml

    - $ref: ../../../components/parameters/PageParam.yml
  responses:
    200:
      description: Returns a collection of image resources.
      content:
        application/json:
          schema:
            title: "ImagesListResponse"
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../../components/schemas/images/Image.yml
              includes:
                $ref: ../../../components/schemas/images/ImageIncludes.yml
    400:
      $ref: ../../../components/responses/errors/400.yml
    401:
      $ref: ../../../components/responses/errors/401.yml
    403:
      $ref: ../../../components/responses/errors/403.yml
    404:
      $ref: ../../../components/responses/errors/404.yml
    409:
      $ref: ../../../components/responses/errors/409.yml
    415:
      $ref: ../../../components/responses/errors/415.yml
    422:
      $ref: ../../../components/responses/errors/422.yml
    500:
      $ref: ../../../components/responses/errors/500.yml
    503:
      $ref: ../../../components/responses/errors/503.yml
post:
  operationId: "createImages"
  tags:
    - Images
  parameters: []
  summary: Create Image
  description: Requires the `images-import` capability.
  requestBody:
    description: Parameters for creating a new image.
    content:
      application/json:
        schema:
          type: object
          required:
            - source_id
          properties:
            name:
              type: string
              description: A name for the image.
            source_id:
              type: string
              description: The ID for the image source to be used.
            override:
              type: object
              description: An override object to be used for a single image create request.
              required:
                - target
              properties:
                target:
                  type: string
                  description: A target to be used for overridding the default target.
  responses:
    201:
      description: Returns an image resource.
      content:
        application/json:
          schema:
            title: "ImagesCreateResponse"
            type: object
            properties:
              data:
                $ref: ../../../components/schemas/images/Image.yml
    400:
      $ref: ../../../components/responses/errors/400.yml
    401:
      $ref: ../../../components/responses/errors/401.yml
    403:
      $ref: ../../../components/responses/errors/403.yml
    404:
      $ref: ../../../components/responses/errors/404.yml
    409:
      $ref: ../../../components/responses/errors/409.yml
    415:
      $ref: ../../../components/responses/errors/415.yml
    422:
      $ref: ../../../components/responses/errors/422.yml
    500:
      $ref: ../../../components/responses/errors/500.yml
    503:
      $ref: ../../../components/responses/errors/503.yml
