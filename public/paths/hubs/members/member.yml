get:
  operationId: "getHubMember"
  tags:
    - Hubs
  security:
    - bearerAuth: []
  parameters:
    - name: memberId
      description: The ID for the given member.
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - senders
            - hubs
            - accounts
  summary: Fetch Hub Member
  description: Requires the `hubs-members-view` capability.
  responses:
    200:
      description: Returns a membership resource.
      content:
        application/json:
          schema:
            title: "FetchHubMemberReturn"
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/hubs/HubMembership.yml
              includes:
                $ref: ../../../../components/schemas/hubs/HubMembershipIncludes.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
patch:
  summary: "Update a Hub Member"
  operationId: "updateHubMember"
  tags:
    - Hubs
  security:
    - bearerAuth: []
  parameters:
    - name: memberId
      description: The ID for the given member.
      in: path
      required: true
      schema:
        type: string
  requestBody:
    description: Parameters for updating a hub membership.
    content:
      application/json:
        schema:
          type: object
          properties:
            role:
              type: string
              description: The account role.
              enum:
                - owner
                - admin
                - developer
                - analyst
            permissions:
              $ref: ../../../../components/schemas/creators/Permissions.yml
  responses:
    200:
      description: Returns a hub membership resource.
      content:
        application/json:
          schema:
            title: "UpdateHubMemberReturn"
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/hubs/HubMembership.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
delete:
  operationId: "removeHubMember"
  tags:
    - Hubs
  security:
    - bearerAuth: []
  parameters:
    - name: memberId
      description: The ID for the given member.
      in: path
      required: true
      schema:
        type: string
  summary: Remove Hub Member
  description: Requires the `hubs-members-manage` capability.
  responses:
    200:
      description: Returns a task descriptor.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../../../components/schemas/jobs/TaskDescriptor.yml
    400:
      $ref: ../../../../components/responses/errors/400.yml
    401:
      $ref: ../../../../components/responses/errors/401.yml
    403:
      $ref: ../../../../components/responses/errors/403.yml
    404:
      $ref: ../../../../components/responses/errors/404.yml
    409:
      $ref: ../../../../components/responses/errors/409.yml
    415:
      $ref: ../../../../components/responses/errors/415.yml
    422:
      $ref: ../../../../components/responses/errors/422.yml
    500:
      $ref: ../../../../components/responses/errors/500.yml
    503:
      $ref: ../../../../components/responses/errors/503.yml
