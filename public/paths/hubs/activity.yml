get:
  operationId: "getHubActivity"
  tags:
    - Hubs
  parameters:
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - users
            - components
            - creators
            - images
            - stack_builds
            - stacks
            - environments
    - name: filter
      in: query
      # Deep nested arrays are undefined https://github.com/OAI/OpenAPI-Specification/issues/1706
      style: deepObject
      required: false
      description: |
        ## Filter Field
        The filter field is a key-value object, where the key is what you would like to filter, and the value is the value you're filtering for.
      schema:
        type: object
        properties:
          search:
            type: string
            description: |
              `filter[search]=value` search activities for a value associated with a field on the given activity(s).
          state:
            type: string
            description: |
              `filter[state]=value1,value2` state filtering will allow you to filter by the activity's current state.
          user:
            type: string
            description: |
              `filter[user]=ID` user filtering by ID. Submit the ID of the user you wish to filter for and the return will be any activity from that user.
          environment:
            type: string
            description: |
              `filter[environment]=ID` environment filtering by ID. Submit the ID of the environment you wish to filter for and the return will be any activity from that environment.
          container:
            type: string
            description: |
              `filter[container]=ID` container filtering by ID. Submit the ID of the container you wish to filter for and the return will be any activity from that container.
          instance:
            type: string
            description: |
              `filter[instance]=ID` instance filtering by ID. Submit the ID of the instance you wish to filter for and the return will be any activity from that instance.
          server:
            type: string
            description: |
              `filter[server]=ID` server filtering by ID. Submit the ID of the server you wish to filter for and the return will be any activity from that server.
          events:
            type: string
            description: |
              `filter[events]=value` filter by event names. Example: `filter[events]=environment.services.vpn.login`
          verbosity:
            type: integer
            description: |
              `filter[verbosity]=integer` filter the activity return by verbosity. The verbosity can be:
                `0` - Activity that users would find useful.
                `1` - Activity that can be useful when tracking down how something happened. 
                `2` - Full activity, can be useful in debugging problems.
    - $ref: ../../../components/parameters/SortParam.yml
    - $ref: ../../../components/parameters/PageParam.yml
  summary: List Activity
  description: Doesn't require a specific capability.
  responses:
    200:
      description: Returns a collection of activity resources.
      content:
        application/json:
          schema:
            title: "ListActivityResponse"
            type: object
            required: 
              - data
            properties:
              data:
                type: array
                items:
                  $ref: ../../../components/schemas/hubs/activity/Activity.yml
              includes:
                $ref: ../../../components/schemas/hubs/activity/ActivityIncludes.yml
    default:
      $ref: ../../../components/responses/errors/DefaultError.yml
