get:
  operationId: "getServersCollection"
  tags:
    - Servers
  parameters:
    - name: meta
      in: query
      required: false
      description:
        A comma separated list of meta values. Meta values will show up under a resource's
        `meta` field. In the case of applying a meta to a collection of resources, each
        resource will have it's own relevant meta data. In some rare cases, meta may not
        apply to individual resources, and may appear in the root document. These will be
        clearly labeled.
      schema:
        type: array
        items:
          type: string
          enum:
            - node
            - instances_count
    - name: include
      in: query
      required: false
      description:
        A comma separated list of include values. Included resources will show
        up under the root document's `include` field, with the key being the id of the included
        resource. In the case of applying an include to a collection of resources, if two
        resources share the same include, it will only appear once in the return.
      schema:
        type: array
        items:
          type: string
          enum:
            - locations
            - models
            - providers
    - $ref: "../../../parameters/SortParam.yml"
    - $ref: "../../../parameters/FilterParam.yml"
    - $ref: "../../../parameters/PageParam.yml"
  summary: List Servers
  description: Requires the `servers-view` capability.
  responses:
    "200":
      description: A collection of server resources.
      content:
        application/json:
          schema:
            title: "ServerCollectionReturn"
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "../../../../schemas/infrastructure/servers/Server.yml"
              includes:
                "$ref": "../../../../schemas/infrastructure/servers/ServerIncludes.yml"
    "400":
      description: This usually means the data sent was in an invalid format.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "401":
      description: OAuth token is invalid.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "404":
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "500":
      description: Indicates an issue with Cycle. Rare.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
post:
  operationId: "createServer"
  tags:
    - Servers
  parameters: []
  summary: Create Server
  description: Requires the `servers-provision` capability.
  requestBody:
    "$ref": "../../../../schemas/infrastructure/servers/requestBodies/CreateServerRequest.yml"
  responses:
    "201":
      description: Returns a single server resource.
      content:
        application/json:
          schema:
            title: "ServerCreateResponse"
            type: object
            properties:
              data:
                "$ref": "../../../../schemas/infrastructure/servers/Server.yml"
    "400":
      description: This usually means the data sent was in an invalid format.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "401":
      description: OAuth token is invalid.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "404":
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
    "500":
      description: Indicates an issue with Cycle. Rare.
      content:
        application/json:
          schema:
            "$ref": "../../../../schemas/error/ErrorResponse.yml"
